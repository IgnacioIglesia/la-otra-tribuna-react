.hero-offers {
  position: relative;
  height: 360px;
  color: #fff;
  display: grid;
  place-items: center;
  text-align: center;
}

.hero-content {
  z-index: 1;
}

.hero-title {
  font-size: clamp(40px, 8vw, 120px);
  font-weight: 900;
  line-height: 1;
  letter-spacing: -0.04em;
  color: #ffffffd9;
  text-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
}

.hero-subtitle {
  font-size: 24px;
  font-weight: 700;
  margin-top: 10px;
}

.hero-desc {
  font-size: 16px;
  opacity: 0.95;
  margin-top: 4px;
}

/* ===== Márgenes generales del catálogo ===== */
.catalog {
  margin-top: 40px;
}

/* 🚫 Eliminado: todas las definiciones de grid-template-columns
   porque eso ya lo maneja ProductGrid.css */

/* ===== Ofertas ===== */
.price-old {
  text-decoration: line-through;
  color: #888;
  font-size: 14px;
  margin-right: 8px;
}

.price-new {
  color: #16a34a;
  font-weight: 700;
  font-size: 18px;
}

/* ===== Tarjeta consistente ===== */
.card {
  height: 100%;
  display: flex;
  flex-direction: column;
  border-radius: 12px;
  overflow: hidden;
  transition: transform 0.2s ease;
}

.card:hover {
  transform: translateY(-3px);
}

/* Imagen con proporción fija */
.card .media img {
  width: 100%;
  aspect-ratio: 4 / 5;
  object-fit: cover;
  display: block;
}

/* Asegura que todas las cards se alineen correctamente */
.products-grid > * {
  min-width: 0; /* evita que se rompa el grid */
}

/* --- FIX: dropdowns encima de las cards --- */
.filters-toolbar { position: relative; z-index: 20; }
.dd { position: relative; z-index: 30; }
.dd-menu { position: fixed; z-index: 10000; pointer-events: auto; }
.filters-toolbar.dd-open { overflow: visible; }
.catalog .products-grid { position: relative; z-index: 1; }

/* --- Fix: que el slider no quede debajo del botón Restablecer --- */
.filters-toolbar { position: relative; }

/* El contenedor del slider queda por encima de otros elementos */
.ft-price {
  position: relative;
  z-index: 5;
  flex: 1 1 420px;      /* le damos aire para que no se meta debajo */
  min-width: 340px;     /* evita que se achique demasiado en desktop */
}

.ft-price input[type="range"] {
  width: 100%;          /* ocupa el ancho disponible del contenedor */
}

/* El botón queda con menor prioridad en el stacking */
.ft-reset {
  position: relative;
  z-index: 1;
  margin-left: 12px;    /* separa visualmente del slider */
}

/* En pantallas medianas/angostas, preferí que rompa línea antes de solaparse */
@media (max-width: 980px) {
  .filters-toolbar {
    flex-wrap: wrap;      /* permite bajar el botón si no hay espacio */
    row-gap: 10px;
  }
  .ft-price {
    flex: 1 1 100%;
    min-width: 260px;
  }
  .ft-reset {
    margin-left: 0;
  }
}

/* ===== Toolbar siempre visible, sin scroll horizontal ===== */

/* 1) La fila de filtros ocupa todo el ancho */
.filters-toolbar {
  position: relative;
  overflow: visible;          /* sin scroll horizontal */
  padding: 12px 14px;
}

/* 2) Cambiamos .ft-left a GRID para controlar bien columnas */
.ft-left {
  display: grid;
  align-items: center;
  width: 100%;
  gap: 12px;
  /* Orden: Ordenar | Colección | Categoría 1 | Categoría 2 | Slider | Botón */
  grid-template-columns:
    max-content               /* ordenar */
    max-content               /* colección */
    max-content               /* categoría 1 */
    max-content               /* categoría 2 */
    minmax(220px, 1fr)        /* slider, crece/achica */
    max-content;              /* restablecer */
}

/* 3) El slider es flexible y capta clics por encima */
.ft-price {
  min-width: 0;               /* permite encogerse sin romper */
  position: relative;
  z-index: 5;                 /* por encima de lo demás */
}
.ft-price input[type="range"] { width: 100%; }

/* 4) Botón normal, sin superponerse */
.ft-reset {
  position: relative;
  z-index: 1;
  margin-left: 4px;
}

/* 5) Afinamos un poco los "pills" para que entren mejor */
.ft-field { padding: 6px 10px; }
.ft-icon { font-size: 13px; }

/* ===== Responsivo: en pantallas medianas/chicas, dos filas limpias ===== */
@media (max-width: 1100px) {
  .ft-left {
    grid-template-columns: repeat(3, max-content) 1fr; /* 4 columnas */
    grid-auto-rows: auto;
  }
  /* Slider a lo ancho de la fila */
  .ft-price { grid-column: 1 / -1; }
  /* Botón a la derecha en la segunda fila */
  .ft-reset { grid-column: 1 / -1; justify-self: end; }
}

@media (max-width: 560px) {
  .ft-left {
    grid-template-columns: 1fr 1fr;  /* dos columnas */
    gap: 10px;
  }
  .ft-price { grid-column: 1 / -1; }
  .ft-reset { grid-column: 1 / -1; justify-self: end; }
}
